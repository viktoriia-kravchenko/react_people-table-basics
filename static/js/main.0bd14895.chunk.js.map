{"version":3,"sources":["components/TemplateNavLink.tsx","components/Navbar.tsx","App.tsx","pages/HomePage.tsx","pages/NotFoundPage.tsx","api.ts","components/Loader/Loader.tsx","components/PersonLink.tsx","components/PeopleTable.tsx","pages/PeoplePage.tsx","index.tsx"],"names":["TemplateNavLink","to","textToDisplay","className","isActive","cn","Navbar","role","App","HomePage","NotFoundPage","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","Loader","PersonLink","person","slug","sex","name","tableHeaders","id","title","PeopleTable","people","personSlug","useParams","map","header","born","died","mother","motherName","father","fatherName","PeoplePage","useState","setPeople","isPeopleLoading","setIsPeopleLoading","isPeopleLoadingError","setIsPeopleLoadingError","getFullPeopleFromServer","peopleFromServer","fullPeople","find","personMother","personFather","useEffect","isNoPeople","length","createRoot","document","getElementById","render","path","element","index","replace"],"mappings":"qQASaA,EAA6B,SAAC,GAAD,IAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,cAAP,OACxC,cAAC,IAAD,CACED,GAAIA,EACJE,UAAW,gBAAGC,EAAH,EAAGA,SAAH,OAAkBC,IAC3B,cAAe,CAAE,8BAA+BD,GADvC,EAFb,SAMGF,GAPqC,ECP7BI,EAAS,WACpB,OACE,qBACE,UAAQ,MACRH,UAAU,iCACVI,KAAK,aACL,aAAW,kBAJb,SAME,qBAAKJ,UAAU,YAAf,SACE,sBAAKA,UAAU,eAAf,UACE,cAAC,EAAD,CAAiBF,GAAG,IAAIC,cAAc,SACtC,cAAC,EAAD,CAAiBD,GAAG,UAAUC,cAAc,iBAKrD,ECbYM,EAAU,WACrB,OACE,sBAAK,UAAQ,MAAb,UACE,cAAC,EAAD,IAEA,sBAAML,UAAU,UAAhB,SACE,cAAC,IAAD,QAIP,ECfYM,EAAW,kBACtB,oBAAIN,UAAU,QAAd,sBADsB,ECAXO,EAAe,kBAC1B,oBAAIP,UAAU,QAAd,2BAD0B,E,oCCSrB,SAASQ,IACd,OALYC,EAKA,IAJL,IAAIC,SAAQ,SAAAC,GAAO,OAAIC,WAAWD,EAASF,EAAxB,KAKvBI,MAAK,kBAAMC,MARA,oEAQN,IACLD,MAAK,SAAAE,GAAQ,OAAIA,EAASC,MAAb,IAPlB,IAAcP,CAQb,C,UCXYQ,EAAS,kBACpB,qBAAKjB,UAAU,SAAS,UAAQ,SAAhC,SACE,qBAAKA,UAAU,qBAFG,ECOTkB,EAAwB,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACtC,OACE,cAAC,IAAD,CACErB,GAAIqB,EAAOC,KACXpB,UAAWE,IACT,CAAE,kBAAkC,MAAfiB,EAAOE,MAHhC,SAMGF,EAAOG,MAGb,ECVKC,EAAe,CACnB,CAAEC,GAAI,EAAGC,MAAO,QAChB,CAAED,GAAI,EAAGC,MAAO,OAChB,CAAED,GAAI,EAAGC,MAAO,QAChB,CAAED,GAAI,EAAGC,MAAO,QAChB,CAAED,GAAI,EAAGC,MAAO,UAChB,CAAED,GAAI,EAAGC,MAAO,WAGLC,EAAyB,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAC/BC,EAAeC,cAAfD,WAER,OACE,wBACE,UAAQ,cACR5B,UAAU,uDAFZ,UAIE,gCACE,6BACGuB,EAAaO,KAAI,SAAAC,GAAM,OACtB,6BACGA,EAAON,OADDM,EAAOP,GADM,QAQ5B,gCACGG,EAAOG,KAAI,SAAAX,GAAM,eAChB,qBACE,UAAQ,SAERnB,UAAWE,IACT,CAAE,yBAA0BiB,EAAOC,OAASQ,IAJhD,UAOE,6BACE,cAAC,EAAD,CAAYT,OAAQA,MAGtB,6BAAKA,EAAOE,MACZ,6BAAKF,EAAOa,OACZ,6BAAKb,EAAOc,OAEZ,6BAEId,EAAOe,OACH,cAAC,EAAD,CAAYf,OAAQA,EAAOe,SAD/B,UAEIf,EAAOgB,kBAFX,QAEyB,MAI7B,6BAEIhB,EAAOiB,OACH,cAAC,EAAD,CAAYjB,OAAQA,EAAOiB,SAD/B,UAEIjB,EAAOkB,kBAFX,QAEyB,QAzBxBlB,EAAOC,KAHE,QAoCzB,ECpEYkB,EAAa,WACxB,MAA4BC,mBAAmB,IAA/C,mBAAOZ,EAAP,KAAea,EAAf,KACA,EAA8CD,oBAAS,GAAvD,mBAAOE,EAAP,KAAwBC,EAAxB,KACA,EAAwDH,oBAAS,GAAjE,mBAAOI,EAAP,KAA6BC,EAA7B,KAEMC,EAAuB,iDAAG,gHAE5BH,GAAmB,GAFS,SAIGlC,IAJH,OAItBsC,EAJsB,OAMtBC,EAAaD,EAAiBhB,KAAI,SAAAX,GACtC,IAAMe,EAASY,EAAiBE,MAC9B,SAAAC,GAAY,OAAIA,EAAa3B,OAASH,EAAOgB,UAAjC,IAGRC,EAASU,EAAiBE,MAC9B,SAAAE,GAAY,OAAIA,EAAa5B,OAASH,EAAOkB,UAAjC,IAGd,OAAO,2BACFlB,GADL,IAEEe,SACAE,UAEH,IAEDI,EAAUO,GAtBkB,gDAwB5BH,GAAwB,GAxBI,yBA0B5BF,GAAmB,GA1BS,4EAAH,qDA8B7BS,qBAAU,WACRN,GACD,GAAE,IAEH,IAAMO,EAA+B,IAAlBzB,EAAO0B,OAE1B,OACE,qCACE,oBAAIrD,UAAU,QAAd,yBAEA,qBAAKA,UAAU,QAAf,SACE,sBAAKA,UAAU,sBAAf,UACGyC,GAAmB,cAAC,EAAD,IAEnBE,GACC,mBAAG,UAAQ,qBAAqB3C,UAAU,kBAA1C,kCAKAoD,IAAeX,GACf,mBAAG,UAAQ,kBAAX,gDAKAW,GACA,cAAC,EAAD,CACEzB,OAAQA,WAOrB,EC/DD2B,qBAAWC,SAASC,eAAe,SAChCC,OACC,cAAC,IAAD,UACE,cAAC,IAAD,UACE,eAAC,IAAD,CAAOC,KAAK,IAAIC,QAAS,cAAC,EAAD,IAAzB,UACE,cAAC,IAAD,CAAOD,KAAK,SAASC,QAAS,cAAC,EAAD,IAA9B,SACE,cAAC,IAAD,CAAOD,KAAK,cAAcC,QAAS,cAAC,EAAD,QAGrC,cAAC,IAAD,CAAOC,OAAK,EAACD,QAAS,cAAC,EAAD,MACtB,cAAC,IAAD,CAAOD,KAAK,OAAOC,QAAS,cAAC,IAAD,CAAU7D,GAAG,IAAI+D,SAAO,MACpD,cAAC,IAAD,CAAOH,KAAK,IAAIC,QAAS,cAAC,EAAD,a","file":"static/js/main.0bd14895.chunk.js","sourcesContent":["import { FC } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport cn from 'classnames';\n\ntype Props = {\n  to: string;\n  textToDisplay: string;\n};\n\nexport const TemplateNavLink: FC<Props> = ({ to, textToDisplay }) => (\n  <NavLink\n    to={to}\n    className={({ isActive }) => cn(\n      'navbar-item', { 'has-background-grey-lighter': isActive },\n    )}\n  >\n    {textToDisplay}\n  </NavLink>\n);\n","import { TemplateNavLink } from './TemplateNavLink';\n\nexport const Navbar = () => {\n  return (\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <TemplateNavLink to=\"/\" textToDisplay=\"Home\" />\n          <TemplateNavLink to=\"/people\" textToDisplay=\"People\" />\n        </div>\n      </div>\n    </nav>\n  );\n};\n","import './App.scss';\nimport { FC } from 'react';\nimport { Outlet } from 'react-router-dom';\nimport { Navbar } from './components/Navbar';\n\nexport const App: FC = () => {\n  return (\n    <div data-cy=\"app\">\n      <Navbar />\n\n      <main className=\"section\">\n        <Outlet />\n      </main>\n    </div>\n  );\n};\n","export const HomePage = () => (\n  <h1 className=\"title\">Home Page</h1>\n);\n","export const NotFoundPage = () => (\n  <h1 className=\"title\">Page not found</h1>\n);\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { FC } from 'react';\nimport cn from 'classnames';\nimport { Link } from 'react-router-dom';\nimport { Person } from '../types/Person';\n\ntype Props = {\n  person: Person;\n};\n\nexport const PersonLink: FC<Props> = ({ person }) => {\n  return (\n    <Link\n      to={person.slug}\n      className={cn(\n        { 'has-text-danger': person.sex === 'f' },\n      )}\n    >\n      {person.name}\n    </Link>\n  );\n};\n","import { FC } from 'react';\nimport cn from 'classnames';\nimport { useParams } from 'react-router-dom';\nimport { Person } from '../types';\nimport { PersonLink } from './PersonLink';\n\ntype Props = {\n  people: Person[];\n};\n\nconst tableHeaders = [\n  { id: 1, title: 'Name' },\n  { id: 2, title: 'Sex' },\n  { id: 3, title: 'Born' },\n  { id: 4, title: 'Died' },\n  { id: 5, title: 'Mother' },\n  { id: 6, title: 'Father' },\n];\n\nexport const PeopleTable: FC<Props> = ({ people }) => {\n  const { personSlug } = useParams();\n\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          {tableHeaders.map(header => (\n            <th key={header.id}>\n              {header.title}\n            </th>\n          ))}\n        </tr>\n      </thead>\n\n      <tbody>\n        {people.map(person => (\n          <tr\n            data-cy=\"person\"\n            key={person.slug}\n            className={cn(\n              { 'has-background-warning': person.slug === personSlug },\n            )}\n          >\n            <td>\n              <PersonLink person={person} />\n            </td>\n\n            <td>{person.sex}</td>\n            <td>{person.born}</td>\n            <td>{person.died}</td>\n\n            <td>\n              {\n                person.mother\n                  ? <PersonLink person={person.mother} />\n                  : person.motherName ?? '-'\n              }\n            </td>\n\n            <td>\n              {\n                person.father\n                  ? <PersonLink person={person.father} />\n                  : person.fatherName ?? '-'\n              }\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { getPeople } from '../api';\nimport { Loader } from '../components/Loader';\nimport { PeopleTable } from '../components/PeopleTable';\nimport { Person } from '../types';\n\nexport const PeoplePage = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [isPeopleLoading, setIsPeopleLoading] = useState(false);\n  const [isPeopleLoadingError, setIsPeopleLoadingError] = useState(false);\n\n  const getFullPeopleFromServer = async () => {\n    try {\n      setIsPeopleLoading(true);\n\n      const peopleFromServer = await getPeople();\n\n      const fullPeople = peopleFromServer.map(person => {\n        const mother = peopleFromServer.find(\n          personMother => personMother.name === person.motherName,\n        );\n\n        const father = peopleFromServer.find(\n          personFather => personFather.name === person.fatherName,\n        );\n\n        return {\n          ...person,\n          mother,\n          father,\n        };\n      });\n\n      setPeople(fullPeople);\n    } catch {\n      setIsPeopleLoadingError(true);\n    } finally {\n      setIsPeopleLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    getFullPeopleFromServer();\n  }, []);\n\n  const isNoPeople = people.length === 0;\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {isPeopleLoading && <Loader />}\n\n          {isPeopleLoadingError && (\n            <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n              Something went wrong\n            </p>\n          )}\n\n          {(isNoPeople && !isPeopleLoading) && (\n            <p data-cy=\"noPeopleMessage\">\n              There are no people on the server\n            </p>\n          )}\n\n          {!isNoPeople && (\n            <PeopleTable\n              people={people}\n            />\n          )}\n        </div>\n      </div>\n    </>\n  );\n};\n","import { createRoot } from 'react-dom/client';\nimport {\n  HashRouter, Navigate, Route, Routes,\n} from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\nimport { HomePage } from './pages/HomePage';\nimport { NotFoundPage } from './pages/NotFoundPage';\nimport { PeoplePage } from './pages/PeoplePage';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <HashRouter>\n      <Routes>\n        <Route path=\"/\" element={<App />}>\n          <Route path=\"people\" element={<PeoplePage />}>\n            <Route path=\":personSlug\" element={<PeoplePage />} />\n          </Route>\n\n          <Route index element={<HomePage />} />\n          <Route path=\"home\" element={<Navigate to=\"/\" replace />} />\n          <Route path=\"*\" element={<NotFoundPage />} />\n        </Route>\n      </Routes>\n    </HashRouter>,\n  );\n"],"sourceRoot":""}